import os
import re
import logging
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
import gdown

# Telegram Bot Token ‡∂ë‡∂ö ‡∂∏‡∑ô‡∂≠‡∂± ‡∂Ø‡∑ê‡∂∏‡∑î‡∑Ä ‡∂∫‡∑î‡∂≠‡∑î‡∂∫‡∑í
TELEGRAM_BOT_TOKEN = "8371050656:AAHOWlKI_bYINDx78jmBvnt6r19ah32spCY"

# Logger ‡∑É‡∑ê‡∂ö‡∑É‡∑ì‡∂∏
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# Google Drive link ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä file id ‡∂ë‡∂ö ‡∑Ñ‡∑ú‡∂∫‡∑è‡∂ú‡∂±‡∑ä‡∂± regex
GDRIVE_REGEX = r'https?://drive\.google\.com/(?:file/d/|open\?id=|uc\?id=)([\w-]+)'

# Download ‡∑Ä‡∑ô‡∂±‡∑ä‡∂± ‡∂á‡∂≠‡∑í folder ‡∂ë‡∂ö
DOWNLOAD_FOLDER = 'downloads'
if not os.path.exists(DOWNLOAD_FOLDER):
    os.makedirs(DOWNLOAD_FOLDER)

def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "üëã ‡∑Ñ‡∑ô‡∂Ω‡∑ù! Google Drive link ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂ë‡∑Ä‡∂±‡∑ä‡∂±. ‡∂∏‡∂∏ ‡∂í file ‡∂ë‡∂ö download ‡∂ö‡∂ª‡∂Ω‡∑è, local ‡∂ë‡∂ö‡∂ß save ‡∂ö‡∂ª‡∂Ω‡∑è ‡∂î‡∂∂‡∂ß ‡∂ë‡∑Ä‡∂±‡∑ä‡∂±‡∂∏‡∑ä."
    )

def download_file(file_id: str):
    url = f'https://drive.google.com/uc?id={file_id}'
    output_path = os.path.join(DOWNLOAD_FOLDER, file_id)
    return gdown.download(url, output_path, quiet=True)

def handle_message(update: Update, context: CallbackContext):
    text = update.message.text or ""
    match = re.search(GDRIVE_REGEX, text)
    if not match:
        update.message.reply_text("‚ùå ‡∑Ñ‡∂ª‡∑í Google Drive link ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∑Ñ‡∂ª‡∑í link ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂ë‡∑Ä‡∂±‡∑ä‡∂±.")
        return
    
    file_id = match.group(1)
    update.message.reply_text(f"‚è≥ Downloading file (ID: {file_id})...")
    
    try:
        file_path = download_file(file_id)
        if not file_path or not os.path.isfile(file_path):
            update.message.reply_text("‚ùå Download ‡∑Ä‡∑î‡∂±‡∂≠‡∑ä file ‡∂ë‡∂ö ‡∑É‡∂ª‡∑ä‡∑Ä‡∂ª‡∂∫‡∑ö ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠.")
            return
    except Exception as e:
        logger.error(f"Download error: {e}")
        update.message.reply_text("‚ùå Download ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∂Ö‡∑É‡∂∏‡∂≠‡∑ä ‡∑Ä‡∑í‡∂∫. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª link ‡∂ë‡∂ö ‡∂¥‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.")
        return
    
    update.message.reply_text(f"‚úÖ Download ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∂∫‡∑í! File ‡∂ë‡∂ö ‡∂∏‡∑ö ‡∂≠‡∑ê‡∂± save ‡∑Ä‡∑î‡∂±‡∑è: {file_path}\nFile ‡∂ë‡∂ö ‡∂î‡∂∂‡∂ß ‡∂∫‡∑Ä‡∂∏‡∑í‡∂±‡∑ä ‡∂¥‡∑Ä‡∂≠‡∑ì...")
    
    try:
        with open(file_path, 'rb') as f:
            update.message.reply_document(document=f, filename=os.path.basename(file_path))
        update.message.reply_text("üì§ File ‡∂ë‡∂ö ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂∫‡∑Ä‡∑è ‡∂á‡∂≠!")
    except Exception as e:
        logger.error(f"Send error: {e}")
        update.message.reply_text("‚ùå File ‡∂ë‡∂ö ‡∂∫‡∑Ä‡∂±‡∑ä‡∂± ‡∂∂‡∑ê‡∂ª‡∑í ‡∑Ä‡∑í‡∂∫. ‡∂î‡∂∂ local folder ‡∂ë‡∂ö‡∑ö ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä ‡∂Ω‡∂∂‡∑è ‡∂ú‡∂≠ ‡∑Ñ‡∑ê‡∂ö.")

def error_handler(update: object, context: CallbackContext):
    logger.warning(f'Update {update} caused error {context.error}')

def main():
    updater = Updater(TELEGRAM_BOT_TOKEN, use_context=True)
    dp = updater.dispatcher
    
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
    dp.add_error_handler(error_handler)
    
    logger.info("Bot started. Listening for messages...")
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
